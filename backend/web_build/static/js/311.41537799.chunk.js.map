{"version":3,"file":"static/js/311.41537799.chunk.js","mappings":"4KAIA,MAYA,EAZmBA,KACf,MAAM,UAAEC,EAAS,cAAEC,IAAkBC,EAAAA,EAAAA,KAErC,OAAOF,GACHG,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACPH,GACAE,EAAAA,EAAAA,KAACE,EAAAA,GAAQ,CAACC,GAAG,OAEbH,EAAAA,EAAAA,KAACI,EAAAA,GAAM,GACV,C,8ECRL,MA4BA,EA5BgBL,KACZ,MAAMM,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,KAAYC,IAAK,IAAAC,EAAA,OAAS,OAALD,QAAK,IAALA,GAAW,QAANC,EAALD,EAAOF,YAAI,IAAAG,OAAN,EAALA,EAAaC,QAAQ,KACjD,KAAEC,EAAI,UAAEC,EAAS,QAAEC,EAAO,MAAEC,EAAK,UAAElB,IAAcmB,EAAAA,EAAAA,IACnDC,EAAAA,EAAoBC,WACpB,CAAEC,KAAMC,QAAY,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMc,MAAQJ,EAAAA,EAAoBC,aAGtD,OAAIrB,EACO,CAAEA,YAAWC,eAAe,GAGnCgB,GACAQ,QAAQC,IAAIR,EAAO,SACnBE,EAAAA,EAAoBO,cACb,CAAE3B,YAAWC,eAAe,KAGnCe,GACAR,GAASoB,EAAAA,EAAAA,IAAab,IAGnB,CACHd,cAAee,GAAcO,QAAY,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMc,KAAOJ,EAAAA,EAAoBC,WACtErB,aACH,C","sources":["components/Layout/AuthLayout.jsx","shared/Auth/useAuth.js"],"sourcesContent":["import { Outlet, Navigate } from \"react-router-dom\";\r\nimport Loader from 'components/Loader';\r\nimport useAuth from 'shared/Auth/useAuth';\r\n\r\nconst AuthLayout = () => {\r\n    const { isLoading, authenticated } = useAuth();\r\n\r\n    return isLoading ? (\r\n        <Loader />\r\n    ) : authenticated ? (\r\n        <Navigate to=\"/\" />\r\n    ) : (\r\n        <Outlet />\r\n    );\r\n};\r\n\r\nexport default AuthLayout;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { localstorageService } from \"utils/localStorageService\";\r\nimport { useGetUserQuery } from \"apis/auth.api\";\r\nimport { loginSuccess } from \"slices/userSlice\";\r\n\r\nconst useAuth = () => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state?.user?.userInfo)\r\n    const { data, isSuccess, isError, error, isLoading } = useGetUserQuery(\r\n        localstorageService.getToken(),\r\n        { skip: Boolean(user?.id) || !localstorageService.getToken() }\r\n    );\r\n\r\n    if (isLoading) {\r\n        return { isLoading, authenticated: false };\r\n    }\r\n\r\n    if (isError) {\r\n        console.log(error, \"error\")\r\n        localstorageService.removeToken();\r\n        return { isLoading, authenticated: false };\r\n    }\r\n\r\n    if (isSuccess) {\r\n        dispatch(loginSuccess(data));\r\n    }\r\n\r\n    return {\r\n        authenticated: isSuccess || (Boolean(user?.id) && localstorageService.getToken()),\r\n        isLoading\r\n    };\r\n};\r\n\r\nexport default useAuth;\r\n"],"names":["AuthLayout","isLoading","authenticated","useAuth","_jsx","Loader","Navigate","to","Outlet","dispatch","useDispatch","user","useSelector","state","_state$user","userInfo","data","isSuccess","isError","error","useGetUserQuery","localstorageService","getToken","skip","Boolean","id","console","log","removeToken","loginSuccess"],"sourceRoot":""}