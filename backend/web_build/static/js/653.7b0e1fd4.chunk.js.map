{"version":3,"file":"static/js/653.7b0e1fd4.chunk.js","mappings":"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","sources":["components/UserDropDown/index.jsx","components/Layout/Layout.jsx","shared/Auth/ProtectedRoute.js","shared/Auth/useAuth.js"],"sourcesContent":["import React from 'react'\r\nimport { Box, Avatar, Menu, ListItem, ListItemButton, ListItemIcon, ListItemText, Typography, Stack } from '@mui/material';\r\nimport BorderColorOutlinedIcon from '@mui/icons-material/BorderColorOutlined';\r\nimport PhoneOutlinedIcon from '@mui/icons-material/PhoneOutlined';\r\nimport AssignmentOutlinedIcon from '@mui/icons-material/AssignmentOutlined';\r\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { styled } from '@mui/material/styles'\r\nimport { appBlackcolor } from 'theme/colors';\r\nimport { localstorageService } from 'utils/localStorageService';\r\n\r\n\r\n\r\nconst StyledLink = styled(Link)(({ theme }) => ({\r\n    textDecoration: 'none',\r\n    color: theme.palette.text.primary,\r\n}));\r\n\r\nconst UserDropDown = () => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const user = useSelector((state) => state?.user?.userInfo)\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localstorageService.logout(\"/login\")\r\n    }\r\n\r\n    const iconColor = { color: appBlackcolor, minWidth: '40px' }\r\n\r\n    return (\r\n        <>\r\n            <Stack direction='column' alignItems='center' spacing={1}>\r\n                <Avatar alt=\"avatar\" onClick={handleClick} sx={{ cursor: 'pointer' }}>\r\n                    {user.username && user?.username?.charAt(0)}\r\n                </Avatar>\r\n                <Typography>{user?.username}</Typography>\r\n            </Stack>\r\n            <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                <StyledLink to='/'>\r\n                    <ListItem disablePadding onClick={handleClose}>\r\n                        <ListItemButton>\r\n                            <ListItemIcon sx={iconColor}>\r\n                                <BorderColorOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Settings\" />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                </StyledLink>\r\n                <StyledLink to='/'>\r\n                    <ListItem disablePadding onClick={handleClose}>\r\n                        <ListItemButton>\r\n                            <ListItemIcon sx={iconColor}>\r\n                                <PhoneOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Contact us\" />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                </StyledLink>\r\n                <StyledLink to='/legal-agreement'>\r\n                    <ListItem disablePadding onClick={handleClose}>\r\n                        <ListItemButton>\r\n                            <ListItemIcon sx={iconColor}>\r\n                                <AssignmentOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Legal Agreement\" />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                </StyledLink>\r\n                {/* <StyledLink to='/login'> */}\r\n                <ListItem disablePadding>\r\n                    <ListItemButton onClick={handleLogout}>\r\n                        <ListItemIcon sx={iconColor}>\r\n                            <LogoutOutlinedIcon sx={{ rotate: '180deg' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Sign Out\" />\r\n                    </ListItemButton>\r\n                </ListItem>\r\n                {/* </StyledLink> */}\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserDropDown","import React from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { TextField, Stack, Button, IconButton, Badge } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AddIcon from '@mui/icons-material/Add'\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport NotificationsNoneOutlinedIcon from '@mui/icons-material/NotificationsNoneOutlined';\r\nimport HelpOutlineOutlinedIcon from '@mui/icons-material/HelpOutlineOutlined';\r\nimport { styled } from '@mui/material/styles'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Logo from \"assets/logos/Logo\";\r\nimport { appBlackcolor } from \"theme/colors\";\r\nimport UserDropDown from \"components/UserDropDown\";\r\nimport { useGetUserQuery } from \"apis/userProfile\";\r\nimport { localstorageService } from \"utils/localStorageService\";\r\nimport { loginSuccess } from \"slices/userSlice\";\r\n\r\nconst SearchInput = styled(TextField)(() => ({\r\n  \"& .MuiInput-root\": {\r\n    backgroundColor: '#F3F6FA !important',\r\n    padding: '8px 12px',\r\n    gap: '8px',\r\n    \":before\": {\r\n      borderBottom: 'none!important'\r\n    },\r\n    \":after\": {\r\n      borderBottom: 'none!important'\r\n    }\r\n  }\r\n}));\r\n\r\nconst StyledLink = styled(Link)(({ theme }) => ({\r\n  textDecoration: 'none',\r\n  color: theme.palette.text.primary,\r\n  fontWeight: 500,\r\n  '&:hover': {\r\n    color: theme.palette.primary.main\r\n  }\r\n}));\r\n\r\nconst Layout = ({ children }) => {\r\n  // const navigate = useNavigate();\r\n  // const dispatch = useDispatch();\r\n  // const user = useSelector(state => state?.user?.userInfo)\r\n  const { pathname } = useLocation();\r\n  // const { data, isSuccess, isError, isLoading } = useGetUserQuery(localstorageService.getToken(), {\r\n  //   skip: Boolean(user?.id) || !localstorageService.getToken()\r\n  // })\r\n\r\n  return (\r\n    <>\r\n      {pathname !== '/onboarding' ? <Stack p={2} height='60px' border='1px solid #E6F0FF'>\r\n        <Stack direction='row' justifyContent='space-between' alignItems='center'>\r\n          <Stack direction='row' alignItems=\"center\" spacing={3}>\r\n            <Link to='/'><Logo width=\"199\" height=\"41\" /></Link>\r\n            <StyledLink to=\"/\">Moment Library</StyledLink>\r\n            <StyledLink to=\"/\">QR Library</StyledLink>\r\n            <SearchInput variant=\"standard\" name=\"search\" type=\"text\" InputProps={{ startAdornment: (<SearchIcon sx={{ rotate: '90deg' }} />) }} />\r\n          </Stack>\r\n          <Stack direction='row' spacing={2} alignItems='center'>\r\n            <Button size=\"large\" variant=\"contained\" startIcon={<AddIcon />}>Create moment</Button>\r\n            <IconButton sx={{ color: appBlackcolor }}> <SettingsOutlinedIcon /> </IconButton>\r\n            <Badge badgeContent={4} color=\"primary\">\r\n              <NotificationsNoneOutlinedIcon />\r\n            </Badge>\r\n            <IconButton sx={{ color: appBlackcolor }}> <HelpOutlineOutlinedIcon /> </IconButton>\r\n            <UserDropDown />\r\n          </Stack>\r\n        </Stack>\r\n      </Stack> : null}\r\n      <>\r\n        {children}\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Outlet, Navigate } from \"react-router-dom\";\r\nimport Layout from \"components/Layout/Layout\";\r\nimport Loader from \"components/Loader\";\r\nimport useAuth from \"./useAuth\";\r\n\r\nconst ProtectedRoute = () => {\r\n  const { isLoading, authenticated } = useAuth();\r\n\r\n  return isLoading ? (\r\n    <Loader />\r\n  ) : authenticated ? (\r\n    <Layout>\r\n      <Outlet />\r\n    </Layout>\r\n  ) : (\r\n    <Navigate to=\"/login\" />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { localstorageService } from \"utils/localStorageService\";\r\nimport { useGetUserQuery } from \"apis/userProfile\";\r\nimport { loginSuccess } from \"slices/userSlice\";\r\n\r\nconst useAuth = () => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state?.user?.userInfo)\r\n    const { data, isSuccess, isError, isLoading } = useGetUserQuery(\r\n        localstorageService.getToken(),\r\n        { skip: Boolean(user?.id) || !localstorageService.getToken() }\r\n    );\r\n\r\n    if (isLoading) {\r\n        return { loading: true, authenticated: false };\r\n    }\r\n\r\n    if (isError) {\r\n        localstorageService.removeToken();\r\n        return { loading: false, authenticated: false };\r\n    }\r\n\r\n    if (isSuccess) {\r\n        dispatch(loginSuccess(data));\r\n    }\r\n\r\n    return { loading: false, authenticated: isSuccess && Boolean(user?.id) };\r\n};\r\n\r\nexport default useAuth;\r\n"],"names":["StyledLink","styled","Link","_ref","theme","textDecoration","color","palette","text","primary","UserDropDown","_user$username","anchorEl","setAnchorEl","React","open","Boolean","user","useSelector","state","_state$user","userInfo","handleClose","iconColor","appBlackcolor","minWidth","_jsxs","_Fragment","children","Stack","direction","alignItems","spacing","_jsx","Avatar","alt","onClick","event","currentTarget","sx","cursor","username","charAt","Typography","Menu","id","onClose","MenuListProps","to","ListItem","disablePadding","ListItemButton","ListItemIcon","BorderColorOutlinedIcon","ListItemText","PhoneOutlinedIcon","AssignmentOutlinedIcon","handleLogout","localstorageService","logout","LogoutOutlinedIcon","rotate","SearchInput","TextField","backgroundColor","padding","gap","borderBottom","fontWeight","main","_ref2","pathname","useLocation","p","height","border","justifyContent","Logo","width","variant","name","type","InputProps","startAdornment","SearchIcon","Button","size","startIcon","AddIcon","IconButton","SettingsOutlinedIcon","Badge","badgeContent","NotificationsNoneOutlinedIcon","HelpOutlineOutlinedIcon","ProtectedRoute","isLoading","authenticated","useAuth","Loader","Layout","Outlet","Navigate","dispatch","useDispatch","data","isSuccess","isError","useGetUserQuery","getToken","skip","loading","removeToken","loginSuccess"],"sourceRoot":""}