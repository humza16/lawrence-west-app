{"version":3,"file":"static/js/835.422f5ba4.chunk.js","mappings":"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","sources":["components/UserDropDown/index.jsx","components/Layout/Sidebar.jsx","components/Layout/Layout.jsx","shared/Auth/ProtectedRoute.js","shared/Auth/useAuth.js"],"sourcesContent":["import React from 'react'\r\nimport { Avatar, Menu, ListItem, ListItemButton, ListItemIcon, ListItemText, Typography, Stack } from '@mui/material';\r\nimport BorderColorOutlinedIcon from '@mui/icons-material/BorderColorOutlined';\r\nimport PhoneOutlinedIcon from '@mui/icons-material/PhoneOutlined';\r\nimport AssignmentOutlinedIcon from '@mui/icons-material/AssignmentOutlined';\r\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { styled } from '@mui/material/styles'\r\nimport { useDispatch } from 'react-redux';\r\nimport { appBlackcolor } from 'theme/colors';\r\nimport { localstorageService } from 'utils/localStorageService';\r\nimport { resetUser } from 'slices/userSlice';\r\n\r\n\r\n\r\nconst StyledLink = styled(Link)(({ theme }) => ({\r\n    textDecoration: 'none',\r\n    color: theme.palette.text.primary,\r\n}));\r\n\r\nconst UserDropDown = () => {\r\n    const dispatch = useDispatch();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const user = useSelector((state) => state?.user?.userInfo)\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        dispatch(resetUser());\r\n        localstorageService.logout();\r\n    }\r\n\r\n    const iconColor = { color: appBlackcolor, minWidth: '40px' }\r\n\r\n    return (\r\n        <>\r\n            <Stack direction='column' alignItems='center' spacing={1}>\r\n                <Avatar alt=\"avatar\" onClick={handleClick} sx={{ cursor: 'pointer' }}>\r\n                    {user.username && user?.username?.charAt(0)}\r\n                </Avatar>\r\n                <Typography>{user?.username}</Typography>\r\n            </Stack>\r\n            <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                <StyledLink to='/'>\r\n                    <ListItem disablePadding onClick={handleClose}>\r\n                        <ListItemButton>\r\n                            <ListItemIcon sx={iconColor}>\r\n                                <BorderColorOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Settings\" />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                </StyledLink>\r\n                <StyledLink to='/'>\r\n                    <ListItem disablePadding onClick={handleClose}>\r\n                        <ListItemButton>\r\n                            <ListItemIcon sx={iconColor}>\r\n                                <PhoneOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Contact us\" />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                </StyledLink>\r\n                <StyledLink to='/legal-agreement'>\r\n                    <ListItem disablePadding onClick={handleClose}>\r\n                        <ListItemButton>\r\n                            <ListItemIcon sx={iconColor}>\r\n                                <AssignmentOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Legal Agreement\" />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                </StyledLink>\r\n                <ListItem disablePadding>\r\n                    <ListItemButton onClick={handleLogout}>\r\n                        <ListItemIcon sx={iconColor}>\r\n                            <LogoutOutlinedIcon sx={{ rotate: '180deg' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Sign Out\" />\r\n                    </ListItemButton>\r\n                </ListItem>\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserDropDown","import * as React from 'react';\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\r\n    ({ theme, open }) => ({\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: `-${drawerWidth}px`,\r\n        ...(open && {\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: 0,\r\n        }),\r\n    }),\r\n);\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: `${drawerWidth}px`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n}));\r\n\r\nconst Sidebar = () => {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n \r\n        return (\r\n            <div>\r\n                <AppBar position=\"fixed\" open={open}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            sx={{ mr: 2, ...(open && { display: 'none' }) }}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap component=\"div\">\r\n                            Persistent drawer\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    sx={{\r\n                        width: drawerWidth,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                            width: drawerWidth,\r\n                            boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                    <List>\r\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                            <ListItem key={text} disablePadding>\r\n                                <ListItemButton>\r\n                                    <ListItemIcon>\r\n                                        {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={text} />\r\n                                </ListItemButton>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <Divider />\r\n                    <List>\r\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (                           \r\n                            <ListItem key={text} disablePadding>\r\n                                <ListItemButton>\r\n                                    <ListItemIcon>\r\n                                        {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={text} />\r\n                                </ListItemButton>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n                <Main open={open}>\r\n                    <DrawerHeader />\r\n\r\n                </Main>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Sidebar;","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { TextField, Stack, Button, IconButton, Badge, useMediaQuery } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AddIcon from '@mui/icons-material/Add'\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport NotificationsNoneOutlinedIcon from '@mui/icons-material/NotificationsNoneOutlined';\r\nimport HelpOutlineOutlinedIcon from '@mui/icons-material/HelpOutlineOutlined';\r\nimport { styled } from '@mui/material/styles'\r\nimport Logo from \"assets/logos/Logo\";\r\nimport { appBlackcolor } from \"theme/colors\";\r\nimport UserDropDown from \"components/UserDropDown\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\n\r\nconst SearchInput = styled(TextField)(() => ({\r\n  \"& .MuiInput-root\": {\r\n    backgroundColor: '#F3F6FA !important',\r\n    padding: '8px 12px',\r\n    gap: '8px',\r\n    \":before\": {\r\n      borderBottom: 'none!important'\r\n    },\r\n    \":after\": {\r\n      borderBottom: 'none!important'\r\n    }\r\n  }\r\n}));\r\n\r\nconst StyledLink = styled(Link)(({ theme }) => ({\r\n  textDecoration: 'none',\r\n  color: theme.palette.text.primary,\r\n  fontWeight: 500,\r\n  '&:hover': {\r\n    color: theme.palette.primary.main\r\n  }\r\n}));\r\n\r\nconst Layout = ({ children }) => {\r\n  const { pathname } = useLocation();\r\n  const isMobile = useMediaQuery('(max-width:900px)');\r\n\r\n  return (\r\n    <>\r\n      {pathname !== '/onboarding' ? isMobile ?\r\n        <Sidebar />\r\n\r\n        : <Stack p={2} height='60px' border='1px solid #E6F0FF'>\r\n          <Stack direction='row' justifyContent='space-between' alignItems='center'>\r\n            <Stack direction='row' alignItems=\"center\" spacing={3}>\r\n              <Link to='/'><Logo width=\"199\" height=\"41\" /></Link>\r\n              <StyledLink to=\"/\">Moment Library</StyledLink>\r\n              <StyledLink to=\"/\">QR Library</StyledLink>\r\n              <SearchInput variant=\"standard\" name=\"search\" type=\"text\" InputProps={{ startAdornment: (<SearchIcon sx={{ rotate: '90deg' }} />) }} />\r\n            </Stack>\r\n            <Stack direction='row' spacing={2} alignItems='center'>\r\n              <Button size=\"large\" variant=\"contained\" startIcon={<AddIcon />}>Create moment</Button>\r\n              <IconButton sx={{ color: appBlackcolor }}> <SettingsOutlinedIcon /> </IconButton>\r\n              <Badge badgeContent={4} color=\"primary\">\r\n                <NotificationsNoneOutlinedIcon />\r\n              </Badge>\r\n              <IconButton sx={{ color: appBlackcolor }}> <HelpOutlineOutlinedIcon /> </IconButton>\r\n              <UserDropDown />\r\n            </Stack>\r\n          </Stack>\r\n        </Stack> : null}\r\n      <>\r\n        {children}\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Outlet, Navigate } from \"react-router-dom\";\r\nimport Layout from \"components/Layout/Layout\";\r\nimport Loader from \"components/Loader\";\r\nimport useAuth from \"./useAuth\";\r\n\r\nconst ProtectedRoute = () => {\r\n  const { isLoading, authenticated } = useAuth();\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (authenticated) {\r\n    return (\r\n      <Layout>\r\n        <Outlet />\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { localstorageService } from \"utils/localStorageService\";\r\nimport { useGetUserQuery } from \"apis/auth.api\";\r\nimport { loginSuccess } from \"slices/userSlice\";\r\n\r\nconst useAuth = () => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state?.user?.userInfo)\r\n    const { data, isSuccess, isError, error, isLoading } = useGetUserQuery(\r\n        localstorageService.getToken(),\r\n        { skip: Boolean(user?.id) || !localstorageService.getToken() }\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (isSuccess && !Boolean(user?.email)) {\r\n            dispatch(loginSuccess(data));\r\n        }\r\n    }, [isSuccess, data, dispatch, user.email])\r\n\r\n    if (isLoading) {\r\n        return { isLoading, authenticated: false };\r\n    }\r\n\r\n    if (isError) {\r\n        console.log(error, \"error\")\r\n        localstorageService.removeToken();\r\n        return { isLoading, authenticated: false };\r\n    }\r\n\r\n    return {\r\n        authenticated: isSuccess || (Boolean(user?.id) && localstorageService.getToken()),\r\n        isLoading\r\n    };\r\n};\r\n\r\nexport default useAuth;\r\n"],"names":["StyledLink","styled","Link","_ref","theme","textDecoration","color","palette","text","primary","UserDropDown","_user$username","dispatch","useDispatch","anchorEl","setAnchorEl","React","open","Boolean","user","useSelector","state","_state$user","userInfo","handleClose","iconColor","appBlackcolor","minWidth","_jsxs","_Fragment","children","Stack","direction","alignItems","spacing","_jsx","Avatar","alt","onClick","event","currentTarget","sx","cursor","username","charAt","Typography","Menu","id","onClose","MenuListProps","to","ListItem","disablePadding","ListItemButton","ListItemIcon","BorderColorOutlinedIcon","ListItemText","PhoneOutlinedIcon","AssignmentOutlinedIcon","handleLogout","resetUser","localstorageService","logout","LogoutOutlinedIcon","rotate","drawerWidth","Main","shouldForwardProp","prop","flexGrow","padding","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","concat","easeOut","enteringScreen","AppBar","MuiAppBar","_ref2","width","DrawerHeader","_ref3","display","mixins","toolbar","justifyContent","Sidebar","useTheme","setOpen","position","Toolbar","IconButton","handleDrawerOpen","edge","mr","MenuIcon","variant","noWrap","component","Drawer","flexShrink","boxSizing","anchor","handleDrawerClose","ChevronLeftIcon","ChevronRightIcon","Divider","List","map","index","InboxIcon","MailIcon","SearchInput","TextField","backgroundColor","gap","borderBottom","fontWeight","main","pathname","useLocation","isMobile","useMediaQuery","p","height","border","Logo","name","type","InputProps","startAdornment","SearchIcon","Button","size","startIcon","AddIcon","SettingsOutlinedIcon","Badge","badgeContent","NotificationsNoneOutlinedIcon","HelpOutlineOutlinedIcon","ProtectedRoute","isLoading","authenticated","useAuth","Loader","Layout","Outlet","Navigate","data","isSuccess","isError","error","useGetUserQuery","getToken","skip","useEffect","email","loginSuccess","console","log","removeToken"],"sourceRoot":""}