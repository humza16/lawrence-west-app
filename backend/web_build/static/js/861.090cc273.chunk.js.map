{"version":3,"file":"static/js/861.090cc273.chunk.js","mappings":"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","sources":["components/RegistrationForm/index.jsx","containers/Auth/Signup.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  FormControl,\r\n  Button,\r\n  Checkbox,\r\n  Stack,\r\n} from \"@mui/material\";\r\nimport { useForm, FormProvider, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useGoogleLogin } from \"@react-oauth/google\";\r\nimport Logo from \"assets/logos/Logo\";\r\nimport Google from \"assets/logos/Google\";\r\nimport Apple from \"assets/logos/Apple\";\r\nimport InputField from \"../InputField\";\r\nimport Link from \"components/Link\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .required(\"Email is required\")\r\n    .email(\"Email format is not valid\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(8, \"Password must be at least 8 characters long\")\r\n    .matches(/[a-z]/, \"Password must contain at least one lowercase letter\")\r\n    .matches(/[A-Z]/, \"Password must contain at least one uppercase letter\")\r\n    .matches(/\\d/, \"Password must contain at least one number\")\r\n    .matches(\r\n      /[!@#$%^&*(),.?\":{}|<>]/,\r\n      \"Password must contain at least one special character\"\r\n    ),\r\n  confirmPassword: yup\r\n    .string()\r\n    .label(\"confirm password\")\r\n    .required()\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n  termsAgreement: yup.boolean().required(\"Please Agree to the terms\"),\r\n  rememberMe: yup.boolean(),\r\n});\r\n\r\nconst onGoogleLoginSuccess = (response) => {\r\n  console.log(response);\r\n};\r\n\r\nconst RegistrationForm = () => {\r\n  const login = useGoogleLogin({\r\n    onSuccess: onGoogleLoginSuccess,\r\n    onError: (error) => console.log(error),\r\n  });\r\n  const methods = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const {\r\n    formState: { errors, isValid },\r\n  } = methods;\r\n\r\n  const onSubmit = async (values) => { };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100vh\" // Set the height of the container\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Box maxWidth=\"330px\" display=\"flex\" flexDirection=\"column\">\r\n        <Logo />\r\n        <Typography variant=\"h5\" fontWeight={600} mt={2}>\r\n          Create your account\r\n        </Typography>\r\n        <FormProvider {...methods}>\r\n          <Box\r\n            component=\"form\"\r\n            mb={2}\r\n            onSubmit={methods.handleSubmit(onSubmit)}\r\n          >\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                Email address\r\n              </Typography>\r\n              <InputField\r\n                name=\"email\"\r\n                type=\"text\"\r\n                placeholder=\"Enter email address\"\r\n              />\r\n            </FormControl>\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                Password\r\n              </Typography>\r\n              <InputField\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n              />\r\n            </FormControl>\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                Confirm Password\r\n              </Typography>\r\n              <InputField\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                placeholder=\"Repeat Password\"\r\n              />\r\n            </FormControl>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Controller\r\n                name=\"termsAgreement\"\r\n                control={methods.control}\r\n                render={({ field }) => {\r\n                  return <Checkbox {...field} />;\r\n                }}\r\n              />\r\n              <Typography variant=\"caption\">\r\n                By continuing, I agree to the{\" \"}\r\n                <Typography\r\n                  fontWeight={600}\r\n                  variant=\"caption\"\r\n                  display=\"contents\"\r\n                >\r\n                  Terms of Service.\r\n                </Typography>\r\n              </Typography>\r\n            </Box>\r\n            <Typography\r\n              color=\"error\"\r\n              fontSize={10}\r\n              margin=\"auto\"\r\n              p={0}\r\n              mt={0.5}\r\n              display=\"contents\"\r\n            >\r\n              {errors?.termsAgreement?.message}\r\n            </Typography>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Controller\r\n                name=\"rememberMe\"\r\n                control={methods.control}\r\n                render={({ field }) => {\r\n                  return <Checkbox {...field} />;\r\n                }}\r\n              />\r\n              <Typography variant=\"caption\">Remember me</Typography>\r\n            </Box>\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 2 }}\r\n            // disabled={!isValid}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Box>\r\n        </FormProvider>\r\n        <Stack spacing={1} mb={2}>\r\n          <Button startIcon={<Google />} color=\"secondary\" onClick={login}>\r\n            Sign in with Google\r\n          </Button>\r\n          <Button startIcon={<Apple />} color=\"secondary\">\r\n            Sign in with Apple\r\n          </Button>\r\n        </Stack>\r\n        <Link to=\"/login\" textAlign=\"center\">Already have an account?</Link>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import RegistrationForm from \"components/RegistrationForm\";\r\nimport React from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport CarouselLayout from \"components/Carousel\";\r\n\r\nconst Signup = () => {\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={0} md={6} display={{ xs: \"none\", md: \"block\" }}>\r\n        <CarouselLayout />\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <RegistrationForm />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"names":["schema","yup","shape","email","required","password","min","matches","confirmPassword","label","oneOf","termsAgreement","rememberMe","onGoogleLoginSuccess","response","console","log","RegistrationForm","_errors$termsAgreemen","login","useGoogleLogin","onSuccess","onError","error","methods","useForm","resolver","yupResolver","formState","errors","isValid","_jsx","Box","width","height","display","justifyContent","alignItems","children","_jsxs","maxWidth","flexDirection","Logo","Typography","variant","fontWeight","mt","FormProvider","component","mb","onSubmit","handleSubmit","async","FormControl","fullWidth","margin","gutterBottom","InputField","name","type","placeholder","Controller","control","render","_ref","field","Checkbox","color","fontSize","p","message","_ref2","Button","sx","Stack","spacing","startIcon","Google","onClick","Apple","Link","to","textAlign","Signup","Grid","container","item","xs","md","CarouselLayout"],"sourceRoot":""}